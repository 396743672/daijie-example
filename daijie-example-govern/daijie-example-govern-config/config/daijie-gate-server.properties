#启用默认执行超时
hystrix.command.default.execution.timeout.enabled=true
#开启重试机制
spring.cloud.loadbalancer.retry.enabled=true
#断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 60000
#设置线程池大小
hystrix.threadpool.default.coreSize=100
#请求连接的超时时间
ribbon.ConnectTimeout=20000
#请求处理的超时时间
ribbon.ReadTimeout=1000
#对所有操作请求都进行重试
ribbon.OkToRetryOnAllOperations=true
#对当前实例的重试次数
ribbon.MaxAutoRetries=1
#对下个实例的重试次数
ribbon.MaxAutoRetriesNextServer=2

#添加自定义Filter，以“,”号隔开
shiro.filterClasses=org.daijie.shiro.filter.SecurityFilter
#请求权限，比如请求路径/api/user，需要有角色为USER,ADMIN才能访问。（/api/user等于api_user，/api/user/**等于api_user_）
shiro.matcher.api_user_=security[ADMIN,USER]

#是否开启redis集群
shiro.redis.cluster=false
#服务地址
shiro.redis.address=127.0.0.1:6379
#访问密码，没有则不用设置
#shiro.redis.password=
#默认连接超时时间
shiro.redis.connectionTimeout=5000
#返回值的超时时间
shiro.redis.timeout=5000
#默认存储超时时间
shiro.redis.expire=360000
#出现异常最大重试次数
shiro.redis.maxAttempts=1

#kisso的属性配置一定要与调用login的服务配置一致
#加密随机码
kisso.config.signkey=C691d971EJ3H376G81
#cookie名称
kisso.config.cookieName=token
#cookie的作用域，只支持域名，本地可以配置host
kisso.config.cookieDomain=daijie.org

#忽略已经添加的服务
zuul.ignored-services=*
#默认zuul会过滤掉cookie等header信息，空为不过滤
zuul.sensitive-headers=
#所有访问/api/**路径做zuul route处理
#监控路径
zuul.routes.api.path=/api/**
#重定向到指定服务
zuul.routes.api.serviceId=api-demo
#保留请求header信息
zuul.routes.api.sensitive-headers=
zuul.routes.api.custom-sensitive-headers=true
#为true时，访问/api/** = daijie-api-cloud/**，为false时，访问/api/** = daijie-api-cloud/api/**
zuul.routes.api.stripPrefix=true

#指定Log4j打印日志包路径的日志级别
logging.level.org.daijie=DEBUG

#对象转json串时，去除为null的属性
spring.jackson.default-property-inclusion=non_null
#指定jackson日期转换格式
spring.jackson.date-format=yyyy-MM-dd HH\:mm\:ss
#指定jackson日期转换时区
spring.jackson.time-zone=Asia/Shanghai

#设置zipkin监控地址
spring.zipkin.baseUrl=http://127.0.0.1:12809
#开启zipkin监控
spring.zipkin.enabled=true

#启用Spring Boot Admin Client
spring.boot.admin.client.enabled=true
#这是一个必填的属性，将当前程序的信息注册到Admin Server中，你需要给出Server URL地址，如果需要注册到多个Admin Server，可以用逗号分隔开来
spring.boot.admin.url=http\://localhost\:12812
#当客户端程序发起注册的时候，需要一个请求地址。
spring.boot.admin.api-path=api/application
#如果Admin端设置了用户名密码访问，你也需要在客户端配置它们。
spring.boot.admin.username=admin
spring.boot.admin.password=admin
#注册间隔（程序启动后多久发出注册请求
spring.boot.admin.period=10000
#如果设置成true，那么上面那个属性就不需要设置了，程序会自动在启动成功后立刻发出注册申请。
spring.boot.admin.auto-registration=true
#当Admin server关闭的时候，自动注销。
spring.boot.admin.auto-deregistration=true
#如果你注册到了多个Admin Server，当他为true的时候，则只会向一个admin server进行注册，否则会同时向所有的admin server进行注册
spring.boot.admin.register-once=true
#客户端的健康监测URL，可以重写（例如Docker中），但是必须唯一。
#spring.boot.admin.client.health-url=
#spring.boot.admin.client.management-url=
#spring.boot.admin.client.service-url=
#默认是false，意味着注册的时候，将会使用机器名进行注册，当设置为true的时候，将会用ip进行注册
spring.boot.admin.client.prefer-ip=false
#安全控制
management.security.enabled=false

eureka.instance.hostname=localhost
eureka.instance.metadata-map.cluster=MAIN

health.config.enabled=true
